{{- /* Defines the secret name */}}
{{- $ordsSecretName := printf "%s-ords-secret" (include "justin-disputes-api.fullname" .) -}}
{{- $keycloakSecretName := printf "%s-keycloak-secret" (include "justin-disputes-api.fullname" .) -}}
{{- $splunkSecretName := printf "%s-splunk-secret" (include "justin-disputes-api.fullname" .) -}}

{{- /* retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result */}}
{{- $ordsSecretObj := (lookup "v1" "Secret" .Release.Namespace $ordsSecretName ) | default dict -}}
{{- $ordsSecretData := (get $ordsSecretObj "data") | default dict -}}

{{- $keycloakSecretObj := (lookup "v1" "Secret" .Release.Namespace $keycloakSecretName ) | default dict -}}
{{- $keycloakSecretData := (get $keycloakSecretObj "data") | default dict -}}

{{- $splunkSecretObj := (lookup "v1" "Secret" .Release.Namespace $splunkSecretName ) | default dict -}}
{{- $splunkSecretData := (get $splunkSecretObj "data") | default dict -}}

{{- /* set existing secret data or generate a random one when not exists */}}
{{- $ordsUsernameSecret := (get $ordsSecretData "ORDS_USERNAME") | default (randAlphaNum 32 | b64enc) -}}
{{- $ordsPasswordSecret := (get $ordsSecretData "ORDS_PASSWORD") | default (randAlphaNum 32 | b64enc) -}}
{{- $ordsBaseUrlSecret := (get $ordsSecretData "ORDS_BASE_URL") | default (randAlphaNum 32 | b64enc) -}}
{{- $ordsGetDisputesEndpointsSecret := (get $ordsSecretData "ORDS_GET_DISPUTES_ENDPOINT") | default (randAlphaNum 32 | b64enc) -}}
{{- $ordsCreateCitationDisputeSecret := (get $ordsSecretData "ORDS_CREATE_CITATION_DISPUTE_ENDPOINT") | default (randAlphaNum 32 | b64enc) -}}
{{- $ordsUpdateCitationDisputeSecret := (get $ordsSecretData "ORDS_UPDATE_CITATION_DISPUTE_ENDPOINT") | default (randAlphaNum 32 | b64enc) -}}
{{- $ordsNotifyProcessStatusEndpointSecret := (get $ordsSecretData "ORDS_NOTIFY_PROCESS_STATUS_ENDPOINT") | default (randAlphaNum 32 | b64enc) -}}

{{- $keycloakRealm := (get $keycloakSecretData "KEYCLOAK_REALM") | default (randAlphaNum 32 | b64enc) -}}
{{- $keycloakAuthServerUrl := (get $keycloakSecretData "KEYCLOAK_AUTH_SERVER_URL") | default (randAlphaNum 32 | b64enc) -}}
{{- $keycloakSslRequired := (get $keycloakSecretData "KEYCLOAK_SSL_REQUIRED") | default (randAlphaNum 32 | b64enc) -}}
{{- $keycloakResource := (get $keycloakSecretData "KEYCLOAK_RESOURCE") | default (randAlphaNum 32 | b64enc) -}}
{{- $keycloakCredentialSecret := (get $keycloakSecretData "KEYCLOAK_CREDENTIALS_SECRET") | default (randAlphaNum 32 | b64enc) -}}


{{- $splunkUrlSecret := (get $splunkSecretData "SPLUNK_URL") | default (randAlphaNum 32 | b64enc) -}}
{{- $splunkTokenSecret := (get $splunkSecretData "SPLUNK_TOKEN") | default (randAlphaNum 32 | b64enc) -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $ordsSecretName }}
  labels:
    {{- include "justin-disputes-api.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  ORDS_USERNAME: {{ (.Values.ords.username | b64enc) | default $ordsUsernameSecret | quote }}
  ORDS_PASSWORD: {{ (.Values.ords.password | b64enc) | default $ordsPasswordSecret | quote }}
  ORDS_BASE_URL: {{ (.Values.ords.baseurl | b64enc) | default $ordsBaseUrlSecret | quote }}
  ORDS_GET_DISPUTES_ENDPOINT: {{ (.Values.ords.getDisputesEndpoint | b64enc) | default $ordsGetDisputesEndpointsSecret | quote }}
  ORDS_NOTIFY_PROCESS_STATUS_ENDPOINT: {{ (.Values.ords.notifyProcessStatusEndpoint | b64enc) | default $ordsNotifyProcessStatusEndpointSecret | quote }}
  ORDS_CREATE_CITATION_DISPUTE_ENDPOINT: {{ (.Values.ords.createCitationDisputeSecret | b64enc) | default $ordsCreateCitationDisputeSecret | quote }}
  ORDS_UPDATE_CITATION_DISPUTE_ENDPOINT: {{ (.Values.ords.updateCitationDisputeSecret | b64enc) | default $ordsUpdateCitationDisputeSecret | quote }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $keycloakSecretName }}
  labels:
    {{- include "justin-disputes-api.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  KEYCLOAK_REALM: {{ (.Values.keycloak.realm | b64enc) | default $keycloakRealm | quote }}
  KEYCLOAK_AUTH_SERVER_URL: {{ (.Values.keycloak.authServerUrl | b64enc) | default $keycloakAuthServerUrl | quote }}
  KEYCLOAK_SSL_REQUIRED: {{ (.Values.keycloak.sslRequired | b64enc) | default $keycloakSslRequired | quote }}
  KEYCLOAK_RESOURCE:  {{ (.Values.keycloak.resource | b64enc) | default $keycloakResource | quote }}
  KEYCLOAK_CREDENTIALS_SECRET: {{ (.Values.keycloak.credentialsSecret | b64enc) | default $keycloakCredentialSecret | quote }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $splunkSecretName }}
  labels:
    {{- include "justin-disputes-api.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  SPLUNK_URL: {{ (.Values.splunk.url | b64enc) | default $splunkUrlSecret | quote }}
  SPLUNK_TOKEN: {{ (.Values.splunk.token | b64enc) | default $splunkTokenSecret | quote }}
